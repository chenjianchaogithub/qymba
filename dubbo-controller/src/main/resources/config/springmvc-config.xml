<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- MVC注解驱动 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 配置扫描器，使得@Controller注解生效 -->
	<context:component-scan base-package="com.hzs" />

	<!-- 定义视图解析器 -->
	<!-- prefix="/WEB-INF/jsp/", suffix=".jsp", viewname="test" -> "/WEB-INF/jsp/test.jsp" -->
	<!--<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		&lt;!&ndash; 前缀 &ndash;&gt;
		<property name="prefix" value="/WEB-INF/views/" />
		&lt;!&ndash; 后缀 &ndash;&gt;
		<property name="suffix" value=".htm" />
	</bean>-->
	<!-- use thymeleaf  -->
	<bean id="templateResolver"
		  class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<!-- Template cache is set to false (default is true).        -->
		<property name="cacheable" value="false" />
		<property name="characterEncoding" value="UTF-8"/>
	</bean>

	<!--suppress SpringModelInspection -->
	<bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>


	<!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view.
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView,
    - otherwise to the BeanNameViewResolver.
    -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="cnManager"/>

		<property name="viewResolvers">
			<list>

				<!-- Used here for 'xml' and 'atom' views  -->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
					<property name="order" value="1"/>
				</bean>

				<bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
					<property name="templateEngine" ref="templateEngine" />
					<property name="characterEncoding" value="UTF-8"/>
					<property name="order" value="2"/>
					<!-- We need to set exclusions because Content Negotiation tries to resolve from -->
					<!-- Thymeleaf even if a specific view bean (of a different class) is already    -->
					<!-- found, which might cause exceptions (e.g. ThymeleafView does not have a     -->
					<!-- 'marshaller' property).                                                     -->
					<property name="excludedViewNames" value="*.xml" />
				</bean>

				<!-- Default viewClass: JSTL view (JSP with html output)-->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/views/"/>
					<property name="suffix" value=".jsp"/>
					<property name="order" value="3"/>
				</bean>
			</list>
		</property>
	</bean>

	<!-- Simple strategy: only path extension is taken into account -->
	<bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true"/>
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="defaultContentType" value="text/html"/>

		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="xml" value="application/xml" />
				<entry key="atom" value="application/atom+xml" />
			</map>
		</property>
	</bean>
	<!-- 处理静态资源被“/”所拦截的问题 -->
	<mvc:default-servlet-handler />

	<import resource="classpath:config/dubbo-consumer.xml"/>

	<!--&lt;!&ndash; 配置购物车的拦截器 &ndash;&gt;
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/cart/**"/>
			<bean class="com.jt.web.interceptor.CartInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>-->
</beans>