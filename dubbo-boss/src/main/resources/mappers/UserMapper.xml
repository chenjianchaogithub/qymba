<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzs.qymba.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hzs.qymba.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="creattime" property="creattime" jdbcType="TIMESTAMP" />
    <result column="mob" property="mob" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="INTEGER" />
    <result column="deptId" property="deptid" jdbcType="BIGINT" />
    <result column="dept" property="dept" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="stid" property="stid" jdbcType="BIGINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="parentId" property="parentid" jdbcType="BIGINT" />
  </resultMap>

  <!-- 登录验证的信息  -->
  <sql id="Login_Token_Column">
    id, name, username, state, creatTime, mob, userType, password, deptId, dept,stid,email
  </sql>

  <sql id="Base_Column_List" >
    id, name, username, password, state, creattime, mob, userType, deptId, dept, openid, 
    stid, email
  </sql>

  <!-- 分页列表的信息 -->
  <sql id="Page_Column_List">
    id, name, username, state, date_format(creatTime, '%Y-%m-%d') AS  creatTime , mob,  userType, deptId, dept
  </sql>

  <sql id="User_List_Page">
    <where>
      <!--
      <if test="state!=null and state!='' " >
       and state in (
           <foreach collection="state" item="s" separator=",">
              #{s, jdbcType=INTEGER}
          </foreach>
       )
      </if>
      -->
      <!-- <if test="roleid!=null and roleid!='' " >
       AND id IN ( SELECT userid FROM user_role_r WHERE roleid = #{roleid, jdbcType=BIGINT} )
      </if> -->
      <if test="state!=null and state!='' " >
        AND state = #{state, jdbcType=INTEGER}
      </if>
      <if test="usertype!=null and usertype!='' " >
        AND usertype = #{usertype, jdbcType=INTEGER}
      </if>
      <if test="currid!=null and currid!='' " >
        AND id != #{currid, jdbcType=BIGINT}
      </if>
      <if test="deptid!=null and deptid!='' " >
        AND deptid = #{deptid, jdbcType=BIGINT}
      </if>
      <!--<if test="roleid!=null and roleid!='' " >
        AND id in ( SELECT userid FROM user_role_r WHERE roleid = #{roleid, jdbcType=BIGINT} )
      </if>-->
      <![CDATA[
			AND name<>'super'
	  ]]>
      <if test="keyword!=null and keyword!=''">
        AND
        <foreach collection="keyword" item="keyword"
                 separator="OR" open="(" close=")" index="">
          name LIKE concat('%',#{keyword,jdbcType=VARCHAR},'%')
          OR username LIKE concat('%',#{keyword,jdbcType=VARCHAR},'%')
        </foreach>
      </if>
      <if test="stid!=null and stid!='' " >
        AND stid = #{stid, jdbcType=BIGINT}
      </if>
    </where>
  </sql>

  <!-- 用户登录验证查询 -->
  <select id="authentication" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT <include refid="Login_Token_Column" />
    FROM user_t
    WHERE ( username = #{username,jdbcType=VARCHAR}
    OR mob = #{username,jdbcType=VARCHAR}
    OR email = #{username,jdbcType=VARCHAR}
    ) AND password = #{password,jdbcType=VARCHAR}
    AND state=0	limit 0,1
  </select>

  <!-- 查找所有可用的用户 -->
  <select id="selectAll" resultMap="BaseResultMap" >
    SELECT
    <include refid="Page_Column_List" />
    FROM user_t
    <where>
      <![CDATA[
			AND state <> 2

			AND ( username <> 'super' OR username is null)
		]]>
    </where>
    ORDER BY parentid, CONVERT(username USING GBK) ASC, id
  </select>

  <select id="selectCount" resultType="java.lang.Long">
    SELECT count(id) FROM user_t

    <include refid="User_List_Page" />
  </select>

  <!-- 后台用户列表显示 SQL-->
  <select id="selectList" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    SELECT <include refid="Page_Column_List" />
    FROM user_t

    <include refid="User_List_Page" />

    <if test="sortName!=null and sortName!='' ">
      Order By creatTime DESC,Convert(${sortName} using GBK) ${sortOrder}
    </if>
    <if test="sortName==null or sortName=='' ">
      ORDER BY user_t.id DESC
    </if>
    <if test="startCount!=null and pageSize!=null" >
      LIMIT ${startCount}, ${pageSize}
    </if>
  </select>

  <!-- 根据用户id,查询授权的权限点 -->
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from user_t
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_t
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_t
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hzs.qymba.model.User" >
    insert into user_t (id, name, username, 
      password, state, creattime, 
      mob, userType, deptId, 
      dept, openid, stid, 
      email)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{creattime,jdbcType=TIMESTAMP}, 
      #{mob,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, #{deptid,jdbcType=BIGINT}, 
      #{dept,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{stid,jdbcType=BIGINT}, 
      #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hzs.qymba.model.User" >
    insert into user_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="creattime != null" >
        creattime,
      </if>
      <if test="mob != null" >
        mob,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="deptid != null" >
        deptId,
      </if>
      <if test="dept != null" >
        dept,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="stid != null" >
        stid,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="creattime != null" >
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="mob != null" >
        #{mob,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=BIGINT},
      </if>
      <if test="dept != null" >
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="stid != null" >
        #{stid,jdbcType=BIGINT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzs.qymba.model.User" >
    update user_t
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="creattime != null" >
        creattime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="mob != null" >
        mob = #{mob,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="deptid != null" >
        deptId = #{deptid,jdbcType=BIGINT},
      </if>
      <if test="dept != null" >
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="stid != null" >
        stid = #{stid,jdbcType=BIGINT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzs.qymba.model.User" >
    update user_t
    set name = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      creattime = #{creattime,jdbcType=TIMESTAMP},
      mob = #{mob,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=INTEGER},
      deptId = #{deptid,jdbcType=BIGINT},
      dept = #{dept,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      stid = #{stid,jdbcType=BIGINT},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>