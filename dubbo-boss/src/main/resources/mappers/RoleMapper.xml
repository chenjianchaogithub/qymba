<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzs.qymba.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.hzs.qymba.model.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="grouping" property="grouping" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="stid" property="stid" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, grouping, name, code, sign, description, state, stid, type
  </sql>


  <!-- 分页列表的信息 -->
  <sql id="Page_Column_List">
    id, grouping, name, code, sign, description, state, stid, type
  </sql>

  <sql id="Role_List_Page">
    <where>


      <if test="keyword!=null and keyword!=''">
        AND
        <foreach collection="keyword" item="keyword"
                 separator="OR" open="(" close=")" index="">
          name LIKE concat('%',#{keyword,jdbcType=VARCHAR},'%')
          OR name LIKE concat('%',#{keyword,jdbcType=VARCHAR},'%')
        </foreach>
      </if>
      <if test="stid!=null and stid!='' " >
        AND stid = #{stid, jdbcType=BIGINT}
      </if>
    </where>
  </sql>


  <!-- 查找所有可用的用户 -->
  <select id="selectAll" resultMap="BaseResultMap" >
    SELECT
    <include refid="Page_Column_List" />
    FROM role_t
    <where>

    </where>

  </select>

  <select id="selectCount" resultType="java.lang.Long">
    SELECT count(id) FROM role_t

    <include refid="Role_List_Page" />
  </select>

  <!-- 后台用户列表显示 SQL-->
  <select id="selectList" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    SELECT <include refid="Page_Column_List" />
    FROM role_t

    <include refid="Role_List_Page" />

    <if test="sortName!=null and sortName!='' ">
      Order By id DESC,Convert(${sortName} using GBK) ${sortOrder}
    </if>
    <if test="sortName==null or sortName=='' ">
      ORDER BY role_t.id DESC
    </if>
    <if test="startCount!=null and pageSize!=null" >
      LIMIT ${startCount}, ${pageSize}
    </if>
  </select>

  <!-- 根据用户id,查询授权的权限点 -->
  <select id="selectByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from role_t
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role_t
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role_t
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hzs.qymba.model.Role" >
    insert into role_t (id, grouping, name, 
      code, sign, description, 
      state, stid, type)
    values (#{id,jdbcType=BIGINT}, #{grouping,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{stid,jdbcType=BIGINT}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hzs.qymba.model.Role" >
    insert into role_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="grouping != null" >
        grouping,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="stid != null" >
        stid,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="grouping != null" >
        #{grouping,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="stid != null" >
        #{stid,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzs.qymba.model.Role" >
    update role_t
    <set >
      <if test="grouping != null" >
        grouping = #{grouping,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="stid != null" >
        stid = #{stid,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzs.qymba.model.Role" >
    update role_t
    set grouping = #{grouping,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      stid = #{stid,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>